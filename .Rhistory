saveAs = "~/Projects/QLBritannia/QLBritannia/Content/filter_game_settings.json")
writeSheetToJSON(file = "~/Projects/QLBritannia/QLBritannia/Content/QLCards.xlsx",
sheetName = "houses",
saveAs = "~/Projects/QLBritannia/QLBritannia/Content/houses.json")
writeSheetToJSON(file = "~/Projects/QLBritannia/QLBritannia/Content/QLCards.xlsx",
sheetName = "events",
saveAs = "~/Projects/QLBritannia/QLBritannia/Content/events.json")
x <- ["NW4 2EH", "SW17 9PT"]
x <- c("NW4 2EH", "SW17 9PT")
search <- paste0("[",paste(paste0("\"",x,"\""),collapse=","),"]")
postcode_url  <- "http://www.datasciencetoolkit.org/street2coordinates"
response <- POST(postcode_url,body=search)
library(httr)
response <- POST(postcode_url,body=search)
library(rJSON)
library(rjson)
json     <- fromJSON(content(response,type="text"))
geocode  <- as.data.frame( do.call(rbind,sapply(json,
function(x) c(long=x$longitude,lat=x$latitude))),
stringsAsFactors = FALSE)
geocode  <- as.data.frame( do.call(rbind,sapply(json,
function(x) c(long=x$longitude,lat=x$latitude))),
stringsAsFactors = FALSE)
rm x
rm(x)
geocode  <- as.data.frame( do.call(rbind,sapply(json,
function(x) c(long=x$longitude, lat=x$latitude))),
stringsAsFactors = FALSE)
geocode  <- as.data.frame( do.call(rbind,sapply(json, function(x) c(long=x$longitude, lat=x$latitude))),stringsAsFactors = FALSE)
x <- c("NW4 2EH", "SW17 9PT")
search <- paste0("[",paste(paste0("\"",x,"\""),collapse=","),"]")
postcode_url  <- "http://www.datasciencetoolkit.org/street2coordinates"
response <- POST(postcode_url,body=search)
json     <- fromJSON(content(response,type="text"))
geocode  <- as.data.frame( do.call(rbind,sapply(json, function(y) c(long=y$longitude, lat=y$latitude))),stringsAsFactors = FALSE)
x <- c("NW4 2EH", "SW17 9PT", "N2 0SQ")
search <- paste0("[",paste(paste0("\"",x,"\""),collapse=","),"]")
postcode_url  <- "http://www.datasciencetoolkit.org/street2coordinates"
response <- POST(postcode_url,body=search)
json     <- fromJSON(content(response,type="text"))
geocode  <- as.data.frame( do.call(rbind, sapply(json, function(y) c(long=y$longitude, lat=y$latitude))),stringsAsFactors = FALSE)
geocode  <- as.data.frame( do.call(rbind, lapply(json, function(y) c(long=y$longitude, lat=y$latitude))),stringsAsFactors = FALSE)
getCoordsOfPostcodes <- function(postcodes) {
search <- paste0("[",paste(paste0("\"",x,"\""),collapse=","),"]")
postcode_url  <- "http://www.datasciencetoolkit.org/street2coordinates"
response <- POST(postcode_url,body=search)
json     <- fromJSON(content(response,type="text"))
coords  <- as.data.frame( do.call(rbind,
lapply(json, function(y) c(long=y$longitude,
lat=y$latitude))),
stringsAsFactors = FALSE)
return(coords)
}
x <- c("NW4 2EH", "SW17 9PT", "N2 0SQ")
y <- getCoordsOfPostcodes(x)
y <- getCoordsOfPostcodes(x)
search <- paste0("[",paste(paste0("\"",coords,"\""),collapse=","),"]")
coords <- y
search <- paste0("[",paste(paste0("\"",coords,"\""),collapse=","),"]")
latlong <- lapply(coords, function(x) paste(x$lat, x$long, sep = ","))
latlong <- sapply(coords, function(x) paste(x$lat, x$long, sep = ","))
View(coords)
latlong <- lapply(range(1, nrow(coords)), function(x) paste(coords$lat[x], x$long[x], sep = ","))
coords
type(coords)
View(coords)
str(coords)
latlong <- lapply(t(coords), function(x) paste(x$lat, x$long, sep = ","))
t(cooreds)
t(coords)
coords
coords$lat
latlong <- sapply(t(coords), function(x) paste(x$lat, x$long, sep = ","))
latlong <- dapply(t(coords), function(x) paste(x$lat, x$long, sep = ","))
latlong <- lapply(coords, function(x) paste(x[1], x[2], sep = ","))
latlong <- lapply(t(coords), function(x) paste(x[1], x[2], sep = ","))
latlong <- lapply(t(coords), function(x) paste(x[0], x[1], sep = ","))
range(1,3)
range(1..2)
range(1, 5)
coords$lat
coords$lat[1]
range(1, nrow(coords))
sum(1,3)
sum(range(1, nrow(coords)))
latlong <- lapply(1:nrow(coords), function(x) paste(coords$lat[x], coords$long[x], sep = ","))
search <- paste0("[",paste(paste0("\"",latlong,"\""),collapse=","),"]")
postcode_url  <- "http://www.datasciencetoolkit.org/coordinates2politics"
response <- POST(postcode_url,body=search)
json     <- fromJSON(content(response,type="text"))
latlong <- lapply(1:nrow(coords), function(x) paste(coords$long[x], coords$lat[x], sep = ","))
search <- paste0("[",paste(paste0("\"",latlong,"\""),collapse=","),"]")
postcode_url  <- "http://www.datasciencetoolkit.org/coordinates2politics"
response <- POST(postcode_url,body=search)
json     <- fromJSON(content(response,type="text"))
latlong <- lapply(1:nrow(coords), function(x) paste(coords$lat[x], coords$long[x], sep = ","))
search <- paste0("[",paste(paste0("\"",latlong,"\""),collapse=","),"]")
postcode_url  <- "http://www.datasciencetoolkit.org/coordinates2politics"
response <- POST(postcode_url,body=search)
json     <- fromJSON(content(response,type="text"))
json
search <- paste0("[",latlong,"]")
search <- paste0("[",paste0(latlong, collapse = "\n"),"]")
search <- paste0("[",paste0(latlong, collapse = "\\n"),"]")
search <- paste0("[",paste0(latlong, collapse = "/n"),"]")
search <- paste0("[",paste0(latlong, collapse = "\n"),"]")
postcode_url  <- "http://www.datasciencetoolkit.org/coordinates2politics"
response <- POST(postcode_url,body=search)
json     <- fromJSON(content(response,type="text"))
latlong <- lapply(1:nrow(coords), function(x) paste(coords$long[x], coords$lat[x], sep = ","))
search <- paste0("[",paste(paste0("\"",latlong,"\""),collapse=","),"]")
postcode_url  <- "http://www.datasciencetoolkit.org/coordinates2politics"
response <- POST(postcode_url,body=search)
json     <- fromJSON(content(response,type="text"))
latlong <- lapply(1:nrow(coords), function(x) paste(coords$lat[x], coords$long[x], sep = ","))
search <- paste0("[",paste(paste0("\"",latlong,"\""),collapse=","),"]")
postcode_url  <- "http://www.datasciencetoolkit.org/coordinates2politics"
response <- POST(postcode_url,body=search)
json     <- fromJSON(content(response,type="text"))
search
library(RDSTK)
install(RDSTK)
install.packages("RDSTK")
library(RDSTK)
latlong <- lapply(1:nrow(coords), function(x) coordinates2politics(latitude = coords$lat[x], longitude = coords$long[x]))
latlong[0]
latlong <- sapply(1:nrow(coords), function(x) coordinates2politics(latitude = coords$lat[x], longitude = coords$long[x]))
latlong <- sapply(1:nrow(coords), function(x) fromJSON(coordinates2politics(latitude = coords$lat[x], longitude = coords$long[x])), type="text")
latlong <- sapply(1:nrow(coords), function(x) fromJSON(coordinates2politics(latitude = coords$lat[x], longitude = coords$long[x])))
remove.packages("rJava")
remove.packages("xlsx")
remove.packages("xlsxjars")
install.packages("xlsx")
library("xlsx", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
t1 <- read.csv("t1.csv", stringsAsFactors = F)
setwd("~/ons/register-proto")
t1 <- read.csv("t1.csv", stringsAsFactors = F)
t1 <- t1[5:,]
t1 <- t1[5:]
t1 <- t1[1:4,]
t1 <- read.csv("t1.csv", stringsAsFactors = F)
t1 <- t1[4:,]
t1 <- t1[4:-1,]
t1 <- tail(t1, -5)
t1 <- read.csv("t1.csv", stringsAsFactors = F)
t1 <- tail(t1, -3)
t1 <- read.csv("t1.csv", stringsAsFactors = F)
t1 <- tail(t1, -4)
t2 <- download(ons_url, t1$uri, "/data")
download <- function(base, url, suffix) {
raw_data <- getURL(paste(base,url, suffix, sep = ""))
return(fromJSON(raw_data))
}
t2 <- download(ons_url, t1$uri, "/data")
ons_url <- "https://www.ons.gov.uk"
library(jsonlite)
library(RCurl)
setwd("~/ons/register-proto")
ons_url <- "https://www.ons.gov.uk"
download <- function(base, url, suffix) {
raw_data <- getURL(paste(base,url, suffix, sep = ""))
return(fromJSON(raw_data))
}
t1 <- read.csv("t1.csv", stringsAsFactors = F)
t1 <- tail(t1, -4)
t2 <- download(ons_url, t1$uri, "/data")
library(jsonlite)
library(RCurl)
setwd("~/ons/register-proto")
ons_url <- "https://www.ons.gov.uk"
download <- function(base, url, suffix) {
raw_data <- getURL(paste(base,url, suffix, sep = ""))
return(fromJSON(raw_data))
}
t1 <- read.csv("t1.csv", stringsAsFactors = F)
t1 <- tail(t1, -4)
t2 <- download(ons_url, t1$uri, "/data")
View(txt)
t2 <- download(ons_url, t1$uri, "/data")
install.packages("RJSONIO")
detach("package:jsonlite", unload=TRUE)
library("RJSONIO", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
download <- function(base, url, suffix) {
raw_data <- getURL(paste(base,url, suffix, sep = ""))
return(fromJSON(raw_data))
}
t2 <- download(ons_url, t1$uri, "/data")
t2 <- sapply(t1$uri,function(x) download(ons_url, x , "/data")
t2 <- sapply(t1$uri,function(x) download(ons_url, x , "/data")
t2 <- sapply(t1$uri,function(x) download(ons_url, x , "/data")
t2 <- sapply(t1$uri,function(x) download(ons_url, x , "/data"))
t2 <- sapply(t1$uri,function(x) download(ons_url, x , "/data"))
t2 <- dapply(t1$uri,function(x) download(ons_url, x , "/data"))
t2 <- apply(t1$uri,function(x) download(ons_url, x , "/data"))
t2 <- lapply(t1$uri,function(x) download(ons_url, x , "/data"))
View(t2)
t2[]$sections
t2$sections
t2[1]
x <- t2[1]
x <- t2[[1]]
x <- t2[[]]$uri
x <- t2[[1]]$uri
y <- sapply(1..4, f(x) t2[[x]]$uri)
y <- sapply(c(1,2,3,4), f(x) t2[[x]]$uri)
t2[[1]]
t2[[1]][1]
t2[[1]][]$uri
t2[[2]][]$uri
t2[[]][]$uri
t2[][]$uri
t2[]$uri
as.list(1,2,3,4)
as.list(1,2,3,4)
t2[[range(1,3)]]$uri
range(1,3)
1..3
1...4
t2[[1:3]]$uri
1:3
lapply(1:3, function(t) t2[[t]])
lapply(1:3, function(t) t2[[t]]$uri)
k <- lapply(1:3, function(t) t2[[t]]$uri)
t1full <- lapply(1:5, function(t) t2[[t]]$uri)
t1full <- lapply(1:4, function(t) t2[[t]]$uri)
uris <- sapply(1:4, function(t) data.frame(t2[[t]]$uri)
uris <- sapply(1:4, function(t) data.frame(t2[[t]]$uri))
uris <- sapply(1:4, function(t) data.frame(t2[[t]]$uri))
uris <- lapply(1:4, function(t) data.frame(t2[[t]]$uri))
uris <- dapply(1:4, function(t) data.frame(t2[[t]]$uri))
uris <- apply(1:4, function(t) data.frame(t2[[t]]$uri))
uris <- sapply(1:4, function(t) data.frame(t2[[t]]$uri))
uris <- lapply(1:4, function(t) data.frame(t2[[t]]$uri))
uris <- as.data.frame(lapply(1:4, function(t) data.frame(t2[[t]]$uri)))
View(uris)
uris <- lapply(1:4, function(t) data.frame(t2[[t]]$uri, t2[[t]]$uri, t2[[t]]$description))
View(uris)
uris[1]
x <- uris[1]
x <- uris[[1]]
x <- uris[[3]]
View(x)
View(x)
x <- uris[[3]]$summary
uris[[3]]
uris[[3]][1]
uris[[3]][1]$title
uris[[3]][1][1]
uris[[3]][1][1][1]
uris[[3]][2]
detach("package:RJSONIO", unload=TRUE)
library("jsonlite", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(jsonlite)
library(RCurl)
setwd("~/ons/register-proto")
ons_url <- "https://www.ons.gov.uk"
download <- function(base, url, suffix) {
raw_data <- getURL(paste(base,url, suffix, sep = ""))
return(fromJSON(raw_data))
}
t1 <- read.csv("t1.csv", stringsAsFactors = F)
t1 <- tail(t1, -4)
t2 <- lapply(t1$uri,function(x) download(ons_url, x , "/data"))
t2[]
t2[[1]]
t2[[1]]$index
t2[[1]]$description$title
t2[$description$title
t2[]$description$title
t2$description$title
t2[[$description$title
t2[[]]$description$title
sapply(1:4, function(index) t2[[index]]$description$title
)
sapply(1:nrow(t2), function(index) t2[[index]]$description$title)
sapply(1:nrow(t2), function(index) c(t2[[index]]$uri, t2[[index]]$description$title,t2[[index]]$description$summary)
t1full <- sapply(1:nrow(t2), function(index) c(t2[[index]]$uri, t2[[index]]$description$title,t2[[index]]$description$summary)))
t1full <- sapply(1:nrow(t2), function(index) c(t2[[index]]$uri, t2[[index]]$description$title,t2[[index]]$description$summary))
t1full <- sapply(1:size(t2), function(index) c(t2[[index]]$uri, t2[[index]]$description$title,t2[[index]]$description$summary))
t1full <- sapply(1:length(t2), function(index) c(t2[[index]]$uri, t2[[index]]$description$title,t2[[index]]$description$summary))
View(`t1full`)
t1full <- lapply(1:length(t2), function(index) c(t2[[index]]$uri, t2[[index]]$description$title,t2[[index]]$description$summary))
t1full <- rbind(t1full)
t1full <- data.frame(t1full)
t1full <- lapply(1:length(t2), function(index) c(t2[[index]]$uri, t2[[index]]$description$title,t2[[index]]$description$summary))
t1full <- as.data.frame(t1full)
t1full <- t(as.data.frame(t1full))
View(`t1full`)
rownames(t1full)
t1 <- read.csv("t1.csv", stringsAsFactors = F)
t1 <- tail(t1, -4)
t2 <- lapply(t1$uri,function(x) download(ons_url, x , "/data"))
t1full <- lapply(1:length(t2), function(index) c(t2[[index]]$uri, t2[[index]]$description$title,t2[[index]]$description$summary))
t1full <- t(as.data.frame(t1full))
View(`t1full`)
t1full <- as.data.frame(t1full, row.names = c("uri", "description", "summary"))
t1full <- lapply(1:length(t2), function(index) c(t2[[index]]$uri, t2[[index]]$description$title,t2[[index]]$description$summary))
t1full <- as.data.frame(t1full, row.names = c("uri", "description", "summary"))
View(`t1full`)
t1full <- t(t1full)
View(`t1full`)
rownames(t1full) <- t1full$uri
t1full <- as.data.frame(t(t1full))
View(`t1full`)
rownames(t1full) <- t1full$uri
View(`t1full`)
t1full <- lapply(1:length(t2), function(index) c(t2[[index]]$uri, t2[[index]]$description$title,t2[[index]]$description$summary))
t1full <- as.data.frame(t1full, row.names = c("uri", "description", "summary"))
t1full <- as.data.frame(t(t1full))
rownames(t1full) <- t1full$uri
View(`t1full`)
t1full[,"start-date"] <- ""
t1full[,"end-date"] <- ""
t1full <- lapply(1:length(t2), function(index) c(t2[[index]]$uri, t2[[index]]$description$title,t2[[index]]$description$summary))
t1full <- as.data.frame(t1full, row.names = c("uri", "description", "summary"), stringsAsFactors = F)
t1full <- as.data.frame(t(t1full), stringsAsFactors = F)
rownames(t1full) <- t1full$uri
t1full[,"start-date"] <- ""
t1full[,"end-date"] <- ""
c(t2[[1]]$uri, t2[[1]]$sections)
k <- c(t2[[1]]$uri, t2[[1]]$sections)
k <- c("parent" = t2[[1]]$uri, t2[[1]]$sections)
t2pages <- lapply(1:length(t2), function(index) t2[[index]]$sections[]$uri)
t2pages <- sapply(1:length(t2), function(index) t2[[index]]$sections[]$uri)
t2pages <- mapply(1:length(t2), function(index) t2[[index]]$sections[]$uri)
t2pages <- sapply(1:length(t2), function(index) t2[[index]]$sections[]$uri)
sections <- t2[[1]]$sections
# Fix up the t2 list
t2pages <- sapply(1:length(t2), function(index) {
sections <- t2[[index]]$sections
sections$uri
})
t2pages <- lapply(1:length(t2), function(index) {
sections <- t2[[index]]$sections
sections$uri
})
as.data.frame(t2[[index]]$sections$uri)
as.data.frame(t2[[1]]$sections$uri)
# Fix up the t2 list
t2pages <- lapply(1:length(t2), function(index) {
sections <- t2[[index]]$sections
d <- as.data.frame(sections$uri)
d$parent = t2[[index]]$uri
d
})
# Fix up the t2 list
t2pages <- lapply(1:length(t2), function(index) {
sections <- t2[[index]]$sections
d <- as.data.frame(sections$uri, stringsAsFactors = F)
d$parent = t2[[index]]$uri
d
})
k <- t2pages[1]
k <- t2pages[[1]]
# Fix up the t2 list
t2pages <- lapply(1:length(t2), function(index) {
sections <- t2[[index]]$sections
d <- data.frame(uri = sections$uri, stringsAsFactors = F)
d$parent = t2[[index]]$uri
d
})
t2pages <- lapply(1:length(t2), function(index) {
sections <- t2[[index]]$sections
d <- data.frame(uri = sections$uri, stringsAsFactors = F)
d$parent = t2[[index]]$uri
d
})
rbind(t2pages[])
v <- rbind(t2pages[])
do.call("rbind", t2pages)
t2pages <- do.call("rbind", pages)
t2pages <- do.call("rbind", t2pages)
View(`t2pages`)
library(jsonlite)
library(RCurl)
setwd("~/ons/register-proto")
ons_url <- "https://www.ons.gov.uk"
download <- function(base, url, suffix) {
raw_data <- getURL(paste(base,url, suffix, sep = ""))
return(fromJSON(raw_data))
}
t1 <- read.csv("t1.csv", stringsAsFactors = F)
t1 <- tail(t1, -4)
t2 <- lapply(t1$uri,function(x) download(ons_url, x , "/data"))
# Fix up the t1 list
t1full <- lapply(1:length(t2), function(index) c(t2[[index]]$uri, t2[[index]]$description$title,t2[[index]]$description$summary))
t1full <- as.data.frame(t1full, row.names = c("uri", "description", "summary"), stringsAsFactors = F)
t1full <- as.data.frame(t(t1full), stringsAsFactors = F)
rownames(t1full) <- t1full$uri
t1full[,"start-date"] <- ""
t1full[,"end-date"] <- ""
t1 <- t1full
# Fix up the t2 list
t2pages <- lapply(1:length(t2), function(index) {
sections <- t2[[index]]$sections
d <- data.frame(uri = sections$uri, stringsAsFactors = F)
d$parent = t2[[index]]$uri
d
})
t2pages <- do.call("rbind", t2pages)
rm(t1full)
t2json <- lapply(t2pages$uri,function(x) download(ons_url, x , "/data"))
download <- function(base, url, suffix) {
url <- paste(base,url, suffix, sep = "")
raw_data <- getURL(url)
return(fromJSON(raw_data))
}
t2json <- lapply(t2pages$uri,function(x) download(ons_url, x , "/data"))
download <- function(base, url, suffix) {
url <- paste(base,url, suffix, sep = "")
print(url)
raw_data <- getURL(url)
return(fromJSON(raw_data))
}
t2json <- lapply(t2pages$uri,function(x) download(ons_url, x , "/data"))
download <- function(base, url, suffix) {
url <- paste(base,url, suffix, sep = "")
print(url)
raw_data <- getURL(url)
return(tryCatch(fromJSON(raw_data),"Error"))
}
t2json <- lapply(t2pages$uri,function(x) download(ons_url, x , "/data"))
download <- function(base, url, suffix) {
url <- paste(base,url, suffix, sep = "")
print(url)
raw_data <- getURL(url)
tryCatch(return(fromJSON(raw_data)),return("Error"))
}
t2json <- lapply(t2pages$uri,function(x) download(ons_url, x , "/data"))
download <- function(base, url, suffix) {
url <- paste(base,url, suffix, sep = "")
print(url)
raw_data <- getURL(url)
tryCatch(return(fromJSON(raw_data)),error=return("Error"))
}
t2json <- lapply(t2pages$uri,function(x) download(ons_url, x , "/data"))
t2json <- sapply(t2pages$uri,function(x) download(ons_url, x , "/data"))
t2json
download <- function(base, url, suffix) {
url <- paste(base,url, suffix, sep = "")
print(url)
raw_data <- getURL(url)
try(return(fromJSON(raw_data)))
return("Error"))
}
download <- function(base, url, suffix) {
url <- paste(base,url, suffix, sep = "")
print(url)
raw_data <- getURL(url)
try(return(fromJSON(raw_data)))
return("Error")
}
t2json <- sapply(t2pages$uri, function(x) download(ons_url, x , "/data"))
t2full <- lapply(1:length(t2json), function(index) {
c(t2json[[index]]$uri, t2json[[index]]$description$title,t2json[[index]]$description$summary))
})
t2full <- lapply(1:length(t2json), function(index)
c(t2json[[index]]$uri, t2json[[index]]$description$title,t2json[[index]]$description$summary)))
c(t2json[[index]]$uri, t2json[[index]]$description$title,t2json[[index]]$description$summary))
t2full <- lapply(1:length(t2json), function(index)
c(t2json[[index]]$uri, t2json[[index]]$description$title,t2json[[index]]$description$summary))
t2json[[index]]$uri
t2json[[1]]$uri
t2json[[index]]$description
index <- 1
t2json[[index]]$description
t2json[[index]]$description[1]
t2json[[index]]$description[1]$title
t2json[[index]]$description["title"]
t2full <- lapply(1:length(t2json), function(index) c(t2json[[index]]$uri, t2json[[index]]$description["title"],t2json[[index]]$description["summary"]))
t2json[[index]]$description["title"]
t2json[[index]]$description["summary"]
t2json[[index]]$uri
t2full <- lapply(1:length(t2json), function(index) data.frame(t2json[[index]]$uri, t2json[[index]]$description["title"], t2json[[index]]$description["summary"]))
t2full <- lapply(1:length(t2json), function(index) data.frame(t2json[[index]]["uri"], t2json[[index]]$description["title"], t2json[[index]]$description["summary"]))
t2full <- lapply(1:length(t2json), function(index) data.frame(t2json[[index]]["uri"], t2json[[index]]["description"]["title"], t2json[[index]]["description"]["summary"]))
t2full <- lapply(1:length(t2json), function(index) c(t2json[[index]]["uri"], t2json[[index]]["description"]["title"], t2json[[index]]["description"]["summary"]))
t2json <- lapply(t2pages$uri, function(x) download(ons_url, x , "/data"))
t2full <- lapply(1:length(t2json), function(index) c(t2json[[index]]["uri"], t2json[[index]]["description"]["title"], t2json[[index]]["description"]["summary"]))
t2full <- lapply(1:length(t2json), function(index) c(t2json[[index]]$uri, t2json[[index]]["description"]["title"], t2json[[index]]["description"]["summary"]))
t2json <- t2json[t2json != "Error"]
t2full <- lapply(1:length(t2json), function(index) c(t2json[[index]]$uri, t2json[[index]]["description"]["title"], t2json[[index]]["description"]["summary"]))
t2full <- lapply(1:length(t2json), function(index) c(t2json[[index]]$uri, t2json[[index]]$description$title, t2json[[index]]$description$summary))
t2full <- as.data.frame(t2full, row.names = c("uri", "description", "summary"), stringsAsFactors = F)
t2full <- as.data.frame(t(t1full), stringsAsFactors = F)
t2full <- as.data.frame(t(t2full), stringsAsFactors = F)
rownames(t2full) <- t2full$uri
t2full[,"start-date"] <- ""
t2full[,"end-date"] <- ""
t2 <- t2full
rm(t2full)
View(`t2`)
t2merge <- merge(t2, t2pages)
View(`t2merge`)
t2pages <- lapply(1:length(t2), function(index) {
sections <- t2[[index]]$sections
d <- data.frame(uri = sections$uri, stringsAsFactors = F)
d$parent = t2[[index]]$uri
d
})
t2pages <- do.call("rbind", t2pages)
t2json <- lapply(t2pages$uri, function(x) download(ons_url, x , "/data"))
t2json <- t2json[t2json != "Error"]
t2full <- lapply(1:length(t2json), function(index) c(t2json[[index]]$uri, t2json[[index]]$description$title, t2json[[index]]$description$summary))
t2full <- as.data.frame(t2full, row.names = c("uri", "description", "summary"), stringsAsFactors = F)
t2full <- as.data.frame(t(t2full), stringsAsFactors = F)
rownames(t2full) <- t2full$uri
t2 <- merge(t2full, t2pages)
t2full[,"start-date"] <- ""
t2full[,"end-date"] <- ""
rm(t2full)
rm(t2pages)
